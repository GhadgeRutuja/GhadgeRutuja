Here's a simple example of a C++ program that allows the user to manage files and folders:

#include <iostream>
#include <fstream>
#include <string>
#include <filesystem>

namespace fs = std::filesystem;

void createFile(const std::string& filename) {
    std::ofstream file(filename);
    if (file.is_open()) {
        std::cout << "File " << filename << " created successfully." << std::endl;
        file.close();
    } else {
        std::cerr << "Unable to create file " << filename << std::endl;
    }
}

void createFolder(const std::string& foldername) {
    if (fs::create_directory(foldername)) {
        std::cout << "Folder " << foldername << " created successfully." << std::endl;
    } else {
        std::cerr << "Unable to create folder " << foldername << std::endl;
    }
}

void listFiles(const std::string& path) {
    for (const auto& entry : fs::directory_iterator(path)) {
        std::cout << entry.path() << std::endl;
    }
}

int main() {
    int choice;
    std::string filename, foldername, path;

    while (true) {
        std::cout << "1. Create file\n2. Create folder\n3. List files in folder\n4. Exit\n";
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        switch (choice) {
            case 1:
                std::cout << "Enter file name: ";
                std::cin >> filename;
                createFile(filename);
                break;
            case 2:
                std::cout << "Enter folder name: ";
                std::cin >> foldername;
                createFolder(foldername);
                break;
            case 3:
                std::cout << "Enter folder path: ";
                std::cin >> path;
                listFiles(path);
                break;
            case 4:
                return 0;
            default:
                std::cout << "Invalid choice. Please try again." << std::endl;
        }
    }

    return 0
}
